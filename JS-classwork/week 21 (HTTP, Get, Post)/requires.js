function onSearch() {
    let gitUser = document.querySelector('#userSearch').value;
    fetch('http://api.github.com/users/' + gitUser)
    .then(response => response.json())
    .then(user => {
        document.querySelector('#avatar').src = user.avatar_url;
        document.querySelector('#userName').innerText = user.name;
    })
    .catch(error => console.log(error));
}

// GET - запрашивает данные из указанного ресурса
// POST - отправляет данные для обработки в указанный ресурс; может что-то получать обратно
// Основное различие: отправляем данные как часть пути ИЛИ отправляет данные так, что пользователи не визят, т.е. спрятаны

/* GET - передает данные на сервер в стркое, в заголовке в формате имя=значение, в данном примере таким запросом является gitUser */
// * могут кэшироваться (запоминаться в строке, в браузере...)
// * остаются в истории браузера
// * нельзя передавать что-то очень длинное
// * нельзя передавать что-то конфиденциальное (например, данные из формы регистрации)
// * используется для НЕ секретных данных (карточка товара, список товаров, инф. о пользоватале/профиль)
// * можно обращаться сколь угодно раз и он будет выдавать одни и те же данные (идемпатентность)

/* POST - строится на основе имя=значение, отправляет в теле HTTP-заголовка, т.е. данные спрятаны в этом заголовке, передает данные в виде ссылки через параметры*/
// * могут быть секретными
// * любой длины
// * не кэшируются
// * не могут быть в закладках